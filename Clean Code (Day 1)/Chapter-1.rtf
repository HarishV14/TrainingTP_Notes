{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\listtable 
{\list\listhybrid
{\listlevel\levelnfc23\leveljc0\levelstartat1{\leveltext\'01\'B7;}{\levelnumbers;}\f1\jclisttab\tx0}
{\listlevel\levelnfc0\leveljc0\levelstartat1{\leveltext\'02\'01.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc4\leveljc0\levelstartat1{\leveltext\'02\'02.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc3\leveljc0\levelstartat1{\leveltext\'02\'03.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc2\leveljc0\levelstartat1{\leveltext\'02\'04.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc1\leveljc0\levelstartat1{\leveltext\'02\'05.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc0\leveljc0\levelstartat1{\leveltext\'02\'06.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc4\leveljc0\levelstartat1{\leveltext\'02\'07.;}{\levelnumbers\'01;}\jclisttab\tx0}
{\listlevel\levelnfc23\leveljc1\levelstartat1{\leveltext\'01\'B7;}{\levelnumbers;}\f1\jclisttab\tx0}\listid1 }}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\b\f0\fs44\lang9 Chapter-1 Clean Code\par

\pard\sa200\sl276\slmult1\fs36 There Will Be Code\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0\fs32 Code represent the detail of requirements some level detail cannot ignored when it is executing that is programming\b\fs22\par
{\pntext\f1\'B7\tab}\b0\fs32 Abstraction(quality) of our language will increase ,domain-specific languages will grow,but it will not eliminate the code\b\fs22\par
{\pntext\f1\'B7\tab}\b0\fs32 Code should be in a formal\b\fs22\par
{\pntext\f1\'B7\tab}\b0\fs32 Code really language which ultimately express the requirement\b\fs22\par
{\pntext\f1\'B7\tab}\b0\fs32 never eliminate necessary code - so there will be code\tab\b\fs22\par

\pard\sa200\sl276\slmult1\fs36 Bad Code\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0\fs32 In the late 80s (killer app) is shut down because of bad code\b\fs22\par
{\pntext\f1\'B7\tab}\b0\fs32 huge mess in code when added more feature code got worse , this could not manage so long - bad code will bought your product down\b\fs22\par
{\pntext\f1\'B7\tab}\b0\fs32 obstraction many times that is \b wadding \b0 that time you go throught the bad code -strugle to find hoping some hints and clues. we will see many sensless code\b\fs22\par
{\pntext\f1\'B7\tab}\b0\fs32 Dont leave the messy code to be cleaned later , Later equals never\b\fs22\par

\pard\sa200\sl276\slmult1\par
\fs36 Total Cost of Owning  a Mess\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li720\sa200\sl276\slmult1\b0\fs32 Messy code be very fast at beginning of a project but moving in a snail pace\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 Every change in the code add the knot in code \b\fs22\par
{\listtext\f0 2.\tab}\b0\fs32 mess of code make productivity will be zero , management will add the more staff to the project that make more difficult for the all so that will not be solution\b\fs22\par
{\listtext\f0 3.\tab}\fs32 The Grand Redesign in the sky\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\ilvl8\fi-360\li1080\sa200\sl276\slmult1\b0\fs32 Redesign takes more time rather we can clean that code that could be better\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 Spending time keeping your code clean is not just cost efficient it matters of professional survival\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li720\sa200\sl276\slmult1\fs32 Attitude\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\b0\fs32 Never blame others for your messy code , comminucate your doubts without shyness\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 In product everyone should clean code because every one wants the clean code\b\fs22\par
{\listtext\f0 2.\tab}\b0\fs32 We should always explain about the messy of code to the manager it is matter of proffesionalism\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li720\sa200\sl276\slmult1\fs32 The Primal Conundrum\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\b0\fs32 The way to make the deadline to finish only one way to go fast is to keep the code as clean at all time\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li720\sa200\sl276\slmult1\fs32 The Art of Clean code\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\b0\fs32 Only way go fast  keep your code clean\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 Writing clean code is lot like painting a picture\b\fs22\par
{\listtext\f0 2.\tab}\b0\fs32 Code sense is the key ,some born with it,some fight to acquire it\b\fs22\par
{\listtext\f0 3.\tab}\b0\fs32 Who writies the clean code is an artist\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li720\sa200\sl276\slmult1\fs32 What is clean code\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\fs32 Bjarne Stroustrup\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1440\sa200\sl276\slmult1\b0\fs32 Bad code temps to mess code grows\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 Clean code should simple and efficient\b\fs22\par
{\listtext\f0 2.\tab}\b0\fs32 error handling should be completed\b\fs22\par
{\listtext\f0 3.\tab}\b0\fs32 discpline of paying attention to the details\b\fs22\par
{\listtext\f0 4.\tab}\b0\fs32 should as minimal dependency\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\fs32 Grady Booch\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1440\sa200\sl276\slmult1\b0\fs32 Clean code is simple and direct\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 Clean code reads like well written prose(Spoken language)\b\fs22\par
{\listtext\f0 2.\tab}\b0\fs32 It should be crisp(without unecessary detail) abstraction(quality) and straight forard lines of control\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\fs32\ldblquote Big\rdblquote  Dave Thomas\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1440\sa200\sl276\slmult1\b0\fs32 Clean code can be read and enhanced by developer rather than original author\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 Smaller code is better for clean code\b\fs22\par
{\listtext\f0 2.\tab}\b0\fs32 Meaningful names , code without testcase is not clean\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\fs32 Michael Feathers\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1440\sa200\sl276\slmult1\b0\fs32 Clean code always looks like it was written by someone who cares\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 No one can enhance better\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\fs32 Ron Jeffries\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1440\sa200\sl276\slmult1\b0\fs32 Runs all the testcase\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 contains no duplication\b\fs22\par
{\listtext\f0 2.\tab}\b0\fs32 Express all the design that are in the system\b\fs22\par
{\listtext\f0 3.\tab}\b0\fs32 minimize the number of entities such as classes methods fuction a like\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\fs32 Ward Cunningham\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1440\sa200\sl276\slmult1\b0\fs32 Clean code is called beautiful code\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li720\sa200\sl276\slmult1\fs32 Schools of Thoughts\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\b0\fs32 To make clean code - clean variable name , clean function ,clean class etc...\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 we are only right everyone has their unique way of teaching and they are also right.\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li720\sa200\sl276\slmult1\fs32 We are authors\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\b0\fs32 next time you write a line of code remeber your an author writing for readers who will judge the efforts\b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 making it easy to read actually makes it easier to write\b\fs22\par
{\listtext\f0 2.\tab}\b0\fs32 you cannot write the code if you cannot read the surrounding code\b\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li720\sa200\sl276\slmult1\fs32 The Boy Scoute Rule\fs22\par

\pard 
{\listtext\f0\u10625?\tab}\ls1\fi-360\li1080\sa200\sl276\slmult1\b0\fs32 Leave the campground cleaner than you found it - dont always \b\fs22\par
{\listtext\f0 1.\tab}\b0\fs32 change one variable name for better\b\fs22\par
{\listtext\f0 2.\tab}\b0\fs32 break up one function that is to large\b\fs22\par
{\listtext\f0 3.\tab}\b0\fs32 clean up small duplications\b\fs22\par
{\listtext\f0 4.\tab}\b0\fs32 clean up composite if statement\b\fs22\par
}
 